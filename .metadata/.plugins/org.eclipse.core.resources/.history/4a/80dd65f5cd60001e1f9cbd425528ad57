package streams;

import java.util.Arrays;
import java.util.List;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;

public class ProdutoTeste {
	
	public static void main(String[] args) {
	
		Produto p1 = new Produto(1500, -0.30 , true, "Tv 32" );
		Produto p2 = new Produto(2500, 1 , false , "Tv 45");
		Produto p3 = new Produto(3500, -0.30 , true ,"Rádio");
		Produto p4 = new Produto(4500, 1 , false, "SuMaMa" );
		Produto p5 = new Produto(5500, -0.30 , true, "Moto 1995");
		
		List<Produto> produtos = Arrays.asList(p1, p2, p3, p4, p5);
		
		Predicate<Produto> temFreteGratis = 
				p -> p.freteGratis == true;
				
		Predicate<Produto> temDesconto = 
				p -> p.desconto == -0.30;
				
		Function<Produto, Double> aplicarDesconto = 
				p -> p.preco * p.desconto;
				
				
		Function<Produto, String> comDescontoEFrete = 
				p -> "O produto " + p.nome + " tem frete grátis e desconto especial";
		
				
		produtos.stream()		
			.filter(temFreteGratis)
			.filter(temDesconto)
			.map(comDescontoEFrete)
			.forEach(System.out::println);
	}
	
	

}
