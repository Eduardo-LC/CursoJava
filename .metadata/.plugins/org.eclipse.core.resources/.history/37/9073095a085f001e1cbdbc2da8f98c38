package streams;

import java.util.Arrays;
import java.util.List;
import java.util.function.Function;
import java.util.function.UnaryOperator;

public class DesafioMap {
	
	public static void main(String[] args) {
		
		List<Integer> nums = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);
		
		Function<Integer, String> converterBi = n -> Integer.toBinaryString(n);
		
		
		Function<String, String> inverterNum = n -> {
            StringBuilder reversed = new StringBuilder();
            for (int i = n.length() - 1; i >= 0; i--) {
                reversed.append(n.charAt(i));
            }
            return reversed.toString();
        }; 
        UnaryOperator<String> converterBiInt = n -> {
        	 int numeroDecimal = 0;
             int tamanho = n.length();

             for (int i = 0; i < tamanho; i++) {
                 char digito = n.charAt(tamanho - 1 - i);
                 if (digito == '1') {
                     numeroDecimal += Math.pow(2, i);
                 } else if (digito != '0') {
                     // Se o dígito não for 0 nem 1, a entrada não é um número binário válido.
                     throw new IllegalArgumentException("A entrada não é um número binário válido.");
                 }
             }

             return numeroDecimal;
        	
        };
        
		//Integer.toBinaryString(n);
		
		/*
		 * 1 Numero para String binária... 6 => "110"
		 * 2 inverter a sting ... "110 => "001"
		 * 3 Converter de volta para inteiro => "011" => 3
		 */
		
		
		
		
		
		
		
		
		
		
		
		
	}

}
